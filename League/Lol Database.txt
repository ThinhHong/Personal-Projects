CREATE DATABASE leagueoflegends;
DROP DATABASE leagueoflegends;
USE leagueoflegends;

CREATE TABLE user(
    id VARCHAR(50) UNIQUE NOT NULL,
    accountId VARCHAR(50) UNIQUE NOT NULL,
    puuid VARCHAR(80) PRIMARY KEY NOT NULL,
    name VARCHAR(25) UNIQUE NOT NULL,
    profileIconId INTEGER,
    revisionDate VARCHAR(30),
    summonerLevel INTEGER
);

SELECT * FROM user;


DROP TABLE user;

CREATE TABLE match_history(
    match_id VARCHAR(40) PRIMARY KEY 
CREATE DATABASE leagueoflegends;
DROP DATABASE leagueoflegends;
USE leagueoflegends;

CREATE TABLE player(
    id VARCHAR(80),
    name VARCHAR(25),
    account_id VARCHAR(80),
    puuid VARCHAR(80),

    profile_icon_id INTEGER,
    revision_date VARCHAR(30),
    summoner_level INTEGER,
    player_region VARCHAR(15),
    PRIMARY KEY (id,name,account_id,puuid)
);

CREATE TABLE match_details(
    data_version INTEGER,
    match_id VARCHAR(20),
    match_region VARCHAR(20),
    PRIMARY KEY(match_id)

);

CREATE TABLE match_history(
    match_id VARCHAR(40),
    id VARCHAR(80),
    account_id VARCHAR(80),
    puuid VARCHAR(80),
    name VARCHAR(30), 
    PRIMARY KEY (match_id,account_id,id,puuid,name),
    FOREIGN KEY (id,account_id,puuid,name) REFERENCES player(id,account_id,puuid,name)
);

SELECT* FROM match_History;

CREATE TABLE items(
    item_id INT,
    item_name VARCHAR(30),
    PRIMARY KEY (item_id) 
);

CREATE TABLE champion(
    champion_id INTEGER PRIMARY KEY,
    champ_name VARCHAR(15) NOT NULL,
    version VARCHAR(10) NOT NULL,
    attack INTEGER,
    defense INTEGER,
    magic INTEGER,
    difficulty INTEGER
);

CREATE TABLE type(
    tags VARCHAR(10),
    champion_id INTEGER,
    PRIMARY KEY (champion_id,tags),
    FOREIGN KEY (champion_id) REFERENCES champion(champion_id) ON DELETE CASCADE
);


DROP TABLE ranked;
DROP TABLE player;

CREATE TABLE mastery(
    champion_id INT, 
    champion_level INT,
    champion_points INT,
    last_play_time VARCHAR(30),
    points_since_last_level INT,
    points_till_next_level INT,
    chest_granted INT,
    tokens_earned INT,
    id VARCHAR(50),
    PRIMARY KEY(champion_id,id),
    FOREIGN KEY(champion_id) REFERENCES champion(champion_id) ON DELETE CASCADE,
    FOREIGN KEY(id) REFERENCES player(id) ON DELETE CASCADE
);


CREATE TABLE ranked(
    league_id VARCHAR(50),
    queue_type VARCHAR(15),
    tier VARCHAR(10),
    division VARCHAR(10),
    id VARCHAR(80),
    name VARCHAR(25),
    points INT,
    wins INT,
    loses INT,
    veteran INT,
    inactive INT,
    freshBlood INT,
    streak INT,
    PRIMARY KEY(league_id,id,name),
    FOREIGN KEY (id,name) REFERENCES player(id,name)
);




DROP TABLE items;

